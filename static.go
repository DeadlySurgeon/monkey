//
// This file was generated via github.com/skx/implant/
//
// Local edits will be lost.
//
package main

import (
	"bytes"
	"compress/gzip"
	"encoding/hex"
	"errors"
	"io/ioutil"
)

//
// EmbeddedResource is the structure which is used to record details of
// each embedded resource in your binary.
//
// The resource contains the (original) filename, relative to the input
// directory `implant` was generated with, along with the original size
// and the compressed/encoded data.
//
type EmbeddedResource struct {
	Filename string
	Contents string
	Length   int
}

//
// RESOURCES is a simple array containing one entry for each embedded
// resource.
//
// It is exposed to callers via the `getResources()` function.
//
var RESOURCES []EmbeddedResource

//
// Populate our resources
//
func init() {

	var tmp EmbeddedResource

	tmp.Filename = "data/stdlib.mon"
	tmp.Contents = "1f8b08000000000004ffec5a7b93db4672ff7f3f452f2bf191b77c2c5752ce3a9956e9645d4ac9c5e75aed25a9ac36d61068901381186466b02b9e4bdf3df5eb9e011fa27c5692cb5fa1cb9200ccf4f3d78f6960363b9bcde8666d0355b6662a5c138d6d02555d5344eb9a40e6ded8da2c6ba6e5964aae4c57c731d94d5bf3869bc825d986e697977f0b4a6de79936ae79cfdbe99912b7539e2a071ba8353e92abc8759e42344d697c39a9edd21bdf6f785dd1d675f460c39aa2a38d79cf54ac4db3e280ebb8e64fb6ee895b72651b2e21cc9a3d83d4afea9a1ae612bb3d2f3b5b97f42e44136d315db97764aac89eb8b4d1362b8ad91863320164e2dac49d61c09e374b2e4b2ea970ed16ea44ec295cc9f4b0b6c51a9adaa6a83bacb18d12615a71c3de442e938526b689ec5bcf917db6d68d3b2962175838bfb39bb6364d7c47d1b93a6f4a162b5df3ab48a6f66cca2dadcd3defadb74d88a6aeb9a48a23448c54dbf74cc1fd36390abf95a315479a74442b1bd7dd725ab8cd2cbcff304b8c8117e8f3bd7b20cf592391adb7ca3dfb605dd31b4690659ab2d72cae1934f6d4a7071bd7f095cfaede932ab1a6896dda2e5269a299d1c4751157bd1f4191081aa887c5386749b77f3271cd1b78dcd4f025b017e1ddb3c23521d20faf69418fa6f3c7f3274faffeeec9a3275f3ffdcdd347cfd2d357440ba2abe96fe65f5f7d8dff1f3f797af9f8c9b34cfd2568982606f25cb1f70223277a4fd6a6296b0e0013bc5852e53cbdb9f9eef5f763fcf5c73fddc8dfafaeaf21aa4a238fc1f3324bf0e6062b6941f3bd3bafaeaf694157cf7a2d6fd64cef4c08ece33bda705cbb924c5dbb8700932b406d7332f8101b4bf14ae40088f23dfb2d45bb61b21180ae9d29b914abe6e440ca6b786fea316dc28a16347811c01eeeaf8cadb93c1fd0887e3a23225bd190cee9ded4f90e11b55d0c43da84d598066f9b018d9e612911f1071b8773bdfc78f6b1d7f1f7d68748acc90710330d19efcd16e6eb05abb06aa80f1237615f733394d523fa7641f3f488c873ec7c9336dc5edea91c1fcfce8866b3f4941a5bc31080a32d6c94fc328568c90c99ebede5787e47235a2ce892c634506146c920a2e3f18e41887ccf837e5fbafe0bbbcf9532dd82db278cc835c49b366ed50cc237231648f11c0e0c4813cdd5a6aeb37d03bdfad797af7eb811f808b3032b8342b259b264cd1177bb3ad2826eef9ec1809f187ecfee586f15d6707ae5fc902c7da37e1a25a2f8794e44db2eac877a3556c56eed9dc20418bbb850007d043df9435d9b083c83bba0c36c467f30bf0048b509472af6ea28771ad1b774d94baadc1463b73bb44de62a6346d43b5d474d57d7ef7e1e5422c1ede5f8ea4e10750547cbbd93803a9747b777a331e5558730d847610f87d79a2056f69e533429729ec3547d5049e04c0552cf87fb410d3d03d79508b8b3450e2b8abe6371cbbe432a5307167fe460b8bdeb898f69b0cf6d5fe8bcfafc763ebefac21d29acc68f7ed1be0c94978808d47db54f6f0f18d6146be226faed385538e4913e27213fe5621779130070d21601f45acfa52d4ce4041bb428bee3a31c8be436ad6c1dd90ff7b62407e408ba1403e3aaa6c5ce23fd5d0d995d544294146b991491ec17756841f0e8adbd130a08ad8a86bdc04359344a32e80fbc7b2e12a6e9729c48aa30440a03904cd12a51916c90f6083080bed98caed5a8b098abaac0683f2b32cd769cec4ba1e5c256964b829951e3b0582d0722bdcbf456659b728895497e488e2cf4591b2299ec72d3ce5eb049b613d23d68ee9ef62ad96443813fd1a1dab319352e52e5baa69c82514a0d93f9b3b38fbbdafe0fce36a2552a7d01ba9b1cadcbad3c538086880ee494e2ffe16c334487e5b39450dda36e0f44465cfe454bcc66f47be769877d11fbc83ed0448ae7eb4a444bc8b0811ad74c248990294b7916b835de44e78550ea149054fc617285452f1622bf480b24f57c40cca9891afed0b70889a4a78b4532cc30017ba45b0fbd918cef057f39d520d32067a8f90653b4348b050de6d3abe9a3419fabf03867aad1ce7309bebdafd219cbca5903a12f95cd5564dab6dee6db3da411013d7ea34b664ffd4fc284c2fa04d237a61d52d514fbeefe59ffa61c90bcd5d7f063efc2159a2de2a6a50558f4664dae112cf5740ef341dcb4fdb2d3f617a38813a09524011c2bb837e3296dbdae49b5095806b4d186a8344799f12ca9551f54f07e5f1279ac015e4fd0d325ddeac904ff423c9f048c46e030e3a6974b0ae4e0f6d198aec634bfdb4127adc8e841aacc8a07e72397cf13a320c514890719ae07892200d1a5cb4f59479f68e5d6bef65513705e974016084d3638c4795a1b6d0882d930c56dcb8822d853bdfdd347688feb84252577cd85f31ad1d813b0699715b81184ec35754a2c701cc64d9bcc6cefa6d83b1c8d55d16cf18412a91432b1c0d9be300d2d995c536fc9357c7eb6973ae83d6fc3507880e57ed3990e1d831731220f49c4392ad65cbcefe1a507d28dfdc0e50402e1d8d27138df3fa3e8d925f91a49056dcbfe82bd338c089e2d36cfe6fb1490b319bd40c1473ef8337b37730de7940ff79afac16c43efe5ac307d435739c61352c47e6024ac6733246243b5c1ac43ea940d14361809788c382473aa1fd9f8dab2d75580996003eb51a8144687beed590398bb8af88d868e45f7ab6740fc52c4a4fe0f77249090f7b51f1081d32af4439a06fa643c998f71c0dac3739f8155b693ede2ed7c6fc76736a07eccb3b525087ba6bf6c33e07470dcd211d89b07d38a21ef4ddd315c1b1f5cb66a53f207c48a2e95519c4da382e556cfeace0b4873159812bdecbce726d65b3d9c63eed3ba10ecb2d633bca34d17d158e6aa9323db3693b636054f89de387a602a3ccb3a6af8414542b62d9cf75c807e78306d2b21b2ce4140268a36da6d8802926f242e6da007d7d52502934d101c5560b436250db80e6cab0185ae6d9d8f63421f21870e2a4c10d931d0614c16a744c3ef3a46cd03ef46e712b6a22e9815ebe97b04b365bba8f853483c2433a6658225c2cefcb341b0214a6f97d2d3e2ee72efaed1d32a6e1f568d94e3b43080489fcae478bbcb70891d808c5187458f60763753c10471292d7e2c52e50cf791609c5d98405334e88b45af48ffcb42263aa246a643f429a963d694ab9a4d930efda19e61bb06e58968d4b608369fcde88df3fb3890247180031b68e55d084069c355650bcb0d7cbebcb7ae0bb5ae3ef69ef3510ab8e6a2ff2f51c829127f4e526f1fd17f950a359bd1bfac6dad035d8d6ff12b59c931700e6680a9713a9778ca5977883afb13fca68dbf0cee0db5260472f7526558a9a178244822b8a41ca6eba3f8c2ede308d39bcac3e2706143ced980dc8377cd4ad216d9dcfde79094f0b777fb85e9203e4956909e7d5322b193f998ec7e74f502a408492123650b71b1cef9af44f16edc03f44df50c12683dd37c2fd69d768dfdcfb4421b2fdce898b41d3b38ea49841dc50c564bcc4014edaad0a2c92552058cac675bb93c61e353490c3f2586160dffec7bb4a3e60cbfde1638b3e2c6ac9f9b227b2b72a42993a76a0ea13a954e6d24300286f4d89b2b6f6aaf6ee763fdefea2ea99b7ae9f998aeee768d743285ce9ea5842743bf74cd3dfb4886aadaa1803944125e41ac766f5ffe60df33fdbdd4c5d286c2a46e56cbb6be2682322d7bebca3105478fa74fe9c1d6352db9701ba6c787fe115ed3e87eb4d93f5971db446d94d09eee23e26016b73661ad5dc5e1280ef7fb6199d60ca939b934259b8a8dbe7c20776cb206d2c24ea8c5c980877a663b46f76375ac29204f177439bd3cd0f39a37ee9ea9665322bd3dac6de4d09a82a9f26e237656df1f724af7eae8ed267302c63dcbeb877f1fbe7d1b2e46c3e9af477fb31b69b80e93af8d890566c72bc5b1966fb51b16243b62c82003a721eedeceef46842efab8a8ea1a514e1f63b2ac317dcd2d1b204d65a5efe5354a38a98797b5c3c2754d5401449905612093f3ac3c3d3ca4ea3c836b654ebae433a7d25eac74824e728d71bfcf242a6b3e8826cbeec97232756401ebcf0827a766310f7df6cc0c29e47c2f7088ded8fabf8107ff593c4c7ffd7c0450fc6f01e2f24b0091944bc60d6d6df17e0433e280f423d99fe4b6d47887d1f1968ab5f1a688ec43ff1a19264ac39e7e5a96c92626bfeb5fcf6bf008331b4074175cbfa501215bdebcf8dd604c5fd1e0fad5cd9faebf1f08916330088961604c7806f4d6bf8d72ba957c0368f47505179f5415dc44b38bf94b828f96937d68cbcb1e0249290ba81a78018d2cdb5b01e51300e24805696d96b974bfc36ad1ec3760188053967c6500334cfa47e1b9ee926c19b8d55930614076bea089be11d425da61fcf11fa5cbc6b819c3f7d4b94e4c51749b0ea7697c56f09e25453ae1284e4d32e7c603791943afc338911f4c247d3c9a7218e864ab81077d5240c3914f0b59d6d98c42745e3bb75e5d24e6245516b89fb29210c53c3545686a6c5225cfedcc77520ee56b0243a5695608cf8922fa3961aa101c4697dc60fa0ebdc5b6a735ee95f56398038c854fcaa6e97c9100ad3c90226b94052f19229049f558ca8449abc6e419cb903a2cde526a7bacc75aa9df2711ae9b7848ae2ec77204061435d78584350809ecc94117f712665c5dc2573907eae36ff1ce1734d42fb3590fe7d673653fe86d906b3d0bb1d02d43f4c3cbb1524855e9201242571d6c0d9df4a879ab6ea40bb1b9abcb51120bed2c2d84d185e876819d7268052e31781009e4754856875203973c12a435117079dbac12cbf454c34e8f09aa866d56582cae41f4c9171b5392f7cd3537abb8465c22bad5b9581cf1c90b5222e2d8b5f87600df13e08311e9acd23747149dac5ea367104a267f9974d2b52ad03044e3e338f1468467e7649442a6051e88db60997e31308c1a3ba209c6123ea64e409c0b1f7a868191cf727e722dde422dd06ee35e8517da2a437aab2df446f4d55734c4e743582dafbb21861ea0208250c61b0baeab5b51219751b9d03999947d50489712bfea3779f50618ec3e9cb8f176d3775b5ffd7ca14d2e5597231a8f2bc371b545f287acb92f43ccf4a2d47d753e680073470e8fee3304206af7c07e8291d069f64e16a42e455cd1d722b9823cbdf7441871d75e0a15cfecaa0f8ca95b4f9418c54a81e01ebc18c077057db3a0c1bfe145907cdb927fe00202c5d4f972a89cf3af80431f5d8934f9a76b8bb5dfad152f223ee1d52497c7564dd30a3ef572ce97da76667b9a145bb0a3a1a6db2cd9a725c31f7448b845f361318b4953c36d6eeb0f076a0901d1fda864f60d9e1aeeb76fa7ffe33e5b90938e0e6ab3bebcc1123b24e585384da5857b08cf063805a8ae6d7f1e50b2605fbfff2b40993d40fdf90b013559fc1500f55f010000ffffc0fe9ed8142a0000"
	tmp.Length = 10772
	RESOURCES = append(RESOURCES, tmp)

}

//
// Return the contents of a resource.
//
func getResource(path string) ([]byte, error) {
	for _, entry := range RESOURCES {
		//
		// We found the file contents.
		//
		if entry.Filename == path {
			var raw bytes.Buffer
			var err error

			// Decode the data.
			in, err := hex.DecodeString(entry.Contents)
			if err != nil {
				return nil, err
			}

			// Gunzip the data to the client
			gr, err := gzip.NewReader(bytes.NewBuffer(in))
			if err != nil {
				return nil, err
			}
			defer gr.Close()
			data, err := ioutil.ReadAll(gr)
			if err != nil {
				return nil, err
			}
			_, err = raw.Write(data)
			if err != nil {
				return nil, err
			}

			// Return it.
			return raw.Bytes(), nil
		}
	}
	return nil, errors.New("Failed to find resource")
}

//
// Return the available resources.
//
func getResources() []EmbeddedResource {
	return RESOURCES
}
