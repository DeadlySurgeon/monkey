//
// Some functional programming examples.
//
// Launch this like so:
//
//  ~$ monkey examples/functional.mon
//  Integers:
//	[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
//  Squares:
//	[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196, 225, 256, 289, 324, 361, 400]
//  Cubes:
//	[0, 1, 8, 27, 64, 125, 216, 343, 512, 729, 1000, 1331, 1728, 2197, 2744, 3375, 4096, 4913, 5832, 6859, 8000]
//  Odd numbers:
//	[1, 3, 5, 7, 9, 11, 13, 15, 17, 19]
//  Even numbers:
//	[0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20]
//  Prime numbers:
//	[0, 1, 2, 3, 5, 7, 11, 13, 17, 19]
//

//
// Return true if the given number is even
//
function is_even(n) {
  return( n % 2 == 0 );
}

//
// Return true if the given number is odd.
//
function is_odd(n) {
  return( n % 2 == 1 );
}


//
// Return true if the given number is prime
//
function is_prime(n) {
   // negative numbers are not prime
   if ( n < 0 ) { return false ; }

   // 0, 1, 2 are prime
   if ( n < 3 ) { return true ; }

   // Now the rest - we're testing all factors between 2 & SQRT(n).
   let i = int(math.sqrt(n)) + 1;

   for( i > 2 ) {
     let i = i - 1;
     if (n % i == 0) {
        return false;
     }
   }
   return true;
}

//
// Square the given number.
//
function square(n) { return n * n ; };


//
// Call the given function on each entry, and return an array of the
// items for which the predicate returned true.
//
function filter( array, predicate ) {
   let i = 0;
   let result = [];

   for( i < len(array) ) {
      let entry = array[i];
      let tmp = predicate(entry);
      if ( tmp ) {
         let result = push( result, entry );
      }
      let i = i + 1;
   }

   return result;
};

//
// Return an array containing the result of applying
// the given function to each item in the list
//
function map( array, fnc ) {
   let i = 0;
   let result = [];

   for( i < len(array) ) {
      let tmp = fnc(array[i]);
      let result = push( result, tmp);
      let i = i + 1;
   }

   return result;
}

//
// Build up a list of the integers beneath 20
//
let ints = [];
let i = 0;
for( i < 21 ) {
   let ints = push( ints, i );
   let i = i + 1;
}

//
// Show the numbers..
//
puts( "Integers:\n" );
puts( "\t", string( ints ), "\n" );

//
// Show their squares ..
//
puts( "Squares:\n" );
puts( "\t", string( map( ints, square ) ) , "\n");

//
// Show their cubes, using an anonymous function
//
puts( "Cubes:\n" );
puts( "\t", string( map( ints, fn(n) { return n * n * n; } ) ) , "\n");

//
// Now the odds / evens
//
puts( "Odd numbers:\n" );
puts( "\t", string( filter( ints, is_odd ) ) , "\n");
puts( "Even numbers:\n" );
puts( "\t", string( filter( ints, is_even ) ) , "\n");
puts( "Prime numbers:\n" );
puts( "\t", string( filter( ints, is_prime ) ) , "\n");
